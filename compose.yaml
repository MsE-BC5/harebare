version: "3"

services:
# FastAPI
  serverapi:
    # db起動後に立ち上げる
    # links:
    #   - db
    depends_on:
      - db
    container_name: "api"
    # path配下のDockerfile読み込み
    build: .
    command: uvicorn main:app --host 0.0.0.0 --reload # ホットリロード本番環境では消す
    ports:
      - "8000:8000"
    volumes:
      # - ./serverapi:/app
      - .:/app
      - ./pyproject.toml:/app/pyproject.toml

    networks:
      - local-net


  # postgresSQL
  db:
    image: postgres:latest
    container_name: "postgres"
    restart: always
    tty: true
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      TZ: Asia/Tokyo
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C
    ports:
      - "5432:5432"
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    networks:
      - local-net

  #  Next.js
  next:
    
    build:
      context:  ./nextapp
      dockerfile: Dockerfile

    container_name: "next"

    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./nextapp:/usr/src/app
      - /user/src/app/node_modules
    command: npm run start  # ビルド時
    # command: npm run dev # 開発環境時
    networks:
      - local-net

  pgadmin:
    image: dpage/pgadmin4
    user: "root" # 本番環境では消す
    restart: always
    volumes:
      - ./docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    ports:
      - "8888:80"
    environment:
      TZ: Asia/Tokyo
      PGADMIN_DEFAULT_EMAIL: 'aaa@bbb.ccc'
      PGADMIN_DEFAULT_PASSWORD: 'pgpassword'
    networks:
      - local-net

volumes:
  db-store:

  # コンテナ間で通信を行うためのネットワークブリッジ
networks:
  local-net:
    driver: bridge